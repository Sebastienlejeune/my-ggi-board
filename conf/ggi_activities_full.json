{
  "handbook_version": "1.2",
  "roles": {
    "Developer": "#6699cc",
    "Team Leader": "#6699cc",
    "Decision Maker": "#6699cc"
  },
  "goals": [
    {
      "name": "Usage Goal",
      "colour": "#8fbc8f"
    },
    {
      "name": "Trust Goal",
      "colour": "#8fbc8f"
    },
    {
      "name": "Culture Goal",
      "colour": "#8fbc8f"
    },
    {
      "name": "Engagement Goal",
      "colour": "#8fbc8f"
    },
    {
      "name": "Strategy Goal",
      "colour": "#8fbc8f"
    }
  ],
  "activities": [
    {
      "id": "GGI-A-17",
      "name": "Inventory of open source skills and resources",
      "path": "51_activity_17.md",
      "roles": [
        "Team Leader",
        "Developer"
      ],
      "goal": "Usage Goal",
      "content": "## Inventory of open source skills and resources\n\nActivity ID: [GGI-A-17](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/51_activity_17.md).\n\n### Description\n\nAt any stage, from a management perspective, it is useful to have a mapping, an inventory of open source resources, assets, usage and their status, as well as potential needs and available solutions. It also includes assessing the required effort and skills to fill the gap.\n\nThis activity aims to take a snapshot of the open source situation within the organisation and on the market and evaluate the bridge between them.\n\n- Inventory of OSS usage in the software development chain as well as in the software products and components used in production.\n- Identify open source technologies (solutions, frameworks, innovative features) that could fit your needs and help improve your process.\n\nNot included\n\n- Identify and qualify related OSS ecosystems and communities. (Culture Goal)\n- Identify dependencies on OSS libraries and components. (Trust Goal)\n- Identify the technical (e.g. languages, frameworks..) and soft (e.g. collaboration, communication) skills needed. (belongs to next Activities: OSS competency growth  and Open source software development skills)\n\n### Opportunity Assessment\n\nAn inventory of available open source resources that will help optimise investment and prioritise skills development.\n\nThis activity creates the conditions for improving development productivity given the efficiency and popularity of OSS components, development principles and tools, particularly in the development of modern applications and infrastructures.\n\n- This may require simplifying the portfolio of OSS resources.\n- This may require retraining personnel.\n- This enables the identification of needs and feeds your IT roadmap.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] There is a workable list of OSS resources \"We use\", \"We integrate\", \"We produce\", \"We host\", and the related Skills\n- [ ] We are on a path to improve efficiency by using state of the art methods and tools.\n- [ ] We have identified OSS resources unaccounted for until now (that may have been creeping in, and do we have elements to define policy in this domain?)\n- [ ] We request new projects to endorse or reuse existing OSS resources.\n- [ ] We have a reasonably safe perception and understanding of the scope of OSS usage in our organisation.\n\n### Tools\n\nThere are many different ways to establish such inventory.\nOne way would be to classify OSS resources into four categories:\n\n- OSS we use: software we use either in production or in development\n- OSS we integrate: for example, OSS libraries we integrate into a custom-made application\n- OSS we produce: for example, a library we have published on GitHub or an OSS project we develop or regularly contribute to.\n- OSS we host: OSS we run to offer an in-house service such as a CRM, GitLab, nexus, etc.\n  An example table would look like the following:\n\n| We use | We integrate | We produce | We host | Skills |\n| ------ | ------------ | ---------- | ------- | ------ |\n| Firefox, <br />OpenOffice, <br />Postgresql | Library slf4j | Library YY on GH | GitLab, <br />Nexus | Java, <br />Python |\n\nThe same identification should apply to skills\n\n- Skills & experiences available through the existing teams\n- Skills & experiences that could be developed or acquired internally (training, coaching, experiment)\n- Skills & experiences that need to be sought out on the market or through partnership / contracting\n\n### Recommendations\n\n- Keep things simple.\n- It's a relatively high-level exercise, not a detailed inventory for the accounting department.\n- While this activity is a good starting point, you do not need to have it 100% completed before launching other activities.\n- Handle issues, resources and skills related to **software development** in Activity #42.\n- The inventory should cover all IT categories: operating systems, middlewares, DBMS, system administration, development and testing tools, etc.\n- Start identifying related communities: it's easier to get support and feedback from the project when they already know you.\n\n### Resources\n\n- An excellent course on [Free (/Libre), and Open Source Software (FOSS)](https://profriehle.com/open-courses/free-and-open-source-software), by Professor Dirk Riehle.\n\n### Proposed next activities\n\n- [GGI-A-18 - Open source competency growth](https://ospo-alliance.org/ggi/activities/open_source_competency_growth) Identifying open source skills and resources enables the organisation to start consolidate and strengthen its awareness and competency.\n- [GGI-A-19 - Open source supervision](https://ospo-alliance.org/ggi/activities/open_source_supervision) Once the inventory of open source software and skills is complete, one can start controlling and managing the use of OSS within the organisation.\n- [GGI-A-28 - Human Resources perspective](https://ospo-alliance.org/ggi/activities/human_resources_perspective) The Human Resources department can build proportionate and adequate development plans, contracts and processes based on the inventory produced in this activity.\n- [GGI-A-33 - Engage with open source vendors](https://ospo-alliance.org/ggi/activities/engage_with_open_source_vendors) One needs to know their open source software and skills before defining an external relationship with a vendor.\n- [GGI-A-42 - Manage open source skills and resources](https://ospo-alliance.org/ggi/activities/manage_open_source_skills_and_resources) Once the inventory of open source assets and skills is complete, one can start managing these properly, building upon the existing internal resources.\n"
    },
    {
      "id": "GGI-A-18",
      "name": "Open source competency growth",
      "path": "51_activity_18.md",
      "roles": [
        "Team Leader"
      ],
      "goal": "Usage Goal",
      "content": "## Open source competency growth\n\nActivity ID: [GGI-A-18](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/51_activity_18.md).\n\n### Description\n\nThis activity is about planning and initiating technical abilities and early experience with OSS once an inventory has been conducted (#17). It is also the opportunity to start establishing a basic, lightweight skills development roadmap.\n\n- Identify what the required skills and training are.\n- Set up a pilot project to kick start the approach, learn from doing, establish a first achievement milestone.\n- Capitalise on lessons learned and build a body of knowledge.\n- Start identifying and documenting the next steps for broader adoption.\n- Elaborate a strategy over the next few months or a year to engage management and financial support.\n\nThe scope of the activity:\n\n- Linux, Apache, Debian, administration skills.\n- Open source databases MariaDB, MySQL, PostgreSQL, etc.\n- Open source virtualisation and cloud technologies.\n- LAMP stack and its alternatives.\n\n### Opportunity Assessment\n\nLike any IT technology, and probably even more, open source brings innovation. Open source grows fast and changes quickly. It requires organisations to keep up to date.\n\nThis activity helps identify areas where training could help people become more efficient and feel more secure using open source. It helps make employee development decisions. Seeding basic open source skills allows evaluating the opportunity to:\n\n- Extend IT solutions with existing market technologies developed by the ecosystem.\n- Develop new ways of collaboration inside and outside the organisation.\n- Acquire competencies in new and innovative technologies.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] A skills matrix is developed.\n- [ ] The scope of OSS technologies used is proactively defined, i.e. avoiding uncontrolled use of OSS technologies.\n- [ ] A satisfactory level of expertise is acquired for these technologies.\n- [ ] Teams have received an \"open source Basics\" training to get started.\n\n### Tools\n\nA key tool here is called Activity (or Competency) Matrix (or Mapping).\n\nThis activity can be conducted by:\n\n- using online tutorials (many free of charge on the Internet),\n- participating in developers conferences,\n- receive vendor training, etc.\n\n### Recommendations\n\n- Using and developing open source components in a safe and efficient manner requires an open, collaborative mindset that needs to be recognised and propagated both from the top (management) and the bottom (developers).\n- Make sure that the approach is actively supported and promoted by the management. Nothing will happen if there is no commitment from the hierarchy.\n- Involve people (developers, stakeholders) in the process: organise round tables and listen to ideas.\n- Allow time and resources for people to discover, try and play with these new concepts. If possible, make it fun -- gamification and rewards are good incentives.\n\nA pilot project with the following steps could serve as a catalyst:\n\n- Identify the technology or framework to start with.\n- Find online training, tutorial, and sample code to experiment.\n- Build a prototype of the end solution.\n- Identify some experts to challenge and coach on implementation.\n\n### Resources\n\n- [What is a Competency Matrix](https://blog.kenjo.io/what-is-a-competency-matrix): a quick introductory read.\n- [How to Make a Skills Matrix for your Team](http://www.managersresourcehandbook.com/download/Skills-Matrix-Template.pdf): a template with commentaries.\n- [MOOC on Free (libre) culture](https://librecours.net/parcours/upload-lc000/) (French Only): this is a 6 part course on the free culture, introduction to Copyrights, Intellectual Property, open source licensing\n\n### Proposed next activities\n\n- [GGI-A-28 - Human Resources perspective](https://ospo-alliance.org/ggi/activities/human_resources_perspective) Carefully planning  the internal skill set and available competencies growth is part of the Human Resources perspective.\n\n"
    },
    {
      "id": "GGI-A-19",
      "name": "Open source supervision",
      "path": "51_activity_19.md",
      "roles": [
        "Team Leader"
      ],
      "goal": "Usage Goal",
      "content": "## Open source supervision\n\nActivity ID: [GGI-A-19](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/51_activity_19.md).\n\n### Description\n\nThis activity is about controlling the use of open source and ensuring open source software is proactively managed. This concerns several perspectives, be it to use OSS tools and business solutions, or to include OSS as components in own developments or modify a version of a software adapting it to its own needs, etc. It is also about identifying areas where open source has become a (sometimes covert) de facto solution and assessing its suitability.\n\nIt may be necessary to clarify the following:\n\n- Is the required functionality provided?\n- Is there additional functionality provided that is not needed but is increasing complexity in the BUILD and RUN phases?\n- What does the licence require, what are the legal constraints?\n- How much does the decision make your organisation supplier-independent?\n- Does a support option, ready for your business needs, exist, and how much does it cost?\n- TCO (Total Cost of Ownership).\n- Does the management know about open source's advantages, e.g. beyond \"saving licence cost\"? Being comfortable with open source helps get the maximum benefit from working with project communities and vendors.\n- See if it makes sense to share development costs by giving one's developments to the community and all its implications, like licence compliance.\n- Check for availability of community support or professional support.\n\n### Opportunity Assessment\n\nDefining a decision process specifically directed at open source is a way to maximise its benefits.\n\n- It avoids the uncontrolled creeping usage and hidden costs of OSS technologies.\n- It leads to informed and OSS-aware strategic and organisational decisions.\n\nCosts: the activity may challenge and reconsider sub-optimal de facto use of open source as inefficient, risky, etc.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] OSS has become a comfortable option when selecting new software.\n- [ ] OSS is not seen as an exception or a dangerous choice.\n- [ ] OSS has become a \"mainstream\" option.\n- [ ] Key players are sufficiently convinced the open source solution has strategic advantages worth investing in.\n- [ ] It can be demonstrated that the TCO of the solution based on open source gives your organisation a higher value than the alternative.\n- [ ] There is an evaluation of how supplier independence saves money or potentially can save money in the future.\n- [ ] There is an evaluation that solution independence reduces risks to be too expensive to change the solution (no closed data formats possible).\n\n### Tools\n\nAt this stage, we cannot think of any tool relevant or concerned by this activity.\n\n### Recommendations\n\n- Proactively managing the use of open-source requires basic levels of awareness and understanding of open source fundamentals because they should be considered in any OSS decision.\n- Compare the needed functionality instead of looking for an alternative for a known closed source solution.\n- Make sure to have support and further development.\n- Regard the effects of the solution's licence on your organisation.\n- Convince all key players about the value of the advantages of open source, beyond \"saving licence cost\".\n- Be honest, do not exaggerate the open source solution's effect.\n- In the decision-making process it is equally important to assess different open source solutions in order to avoid disappointment through wrong expectations, to make it clear what the organisation is required to do and all the advantages the openness of the solutions brings. This must be identified so the organisation can assess it for its own context.\n\n### Resources\n\n- [Top 5 Benefits of Open Source](https://www.openlogic.com/blog/top-5-benefits-open-source-software): Sponsored blog, but still interesting, quick read.\n- [Weighing The Hidden Costs Of Open Source](https://www.itjungle.com/2021/02/15/weighing-the-hidden-costs-of-open-source/): an IBM-sponsored look at OSS support costs.\n"
    },
    {
      "id": "GGI-A-20",
      "name": "Open source enterprise software",
      "path": "51_activity_20.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Usage Goal",
      "content": "## Open source enterprise software\n\nActivity ID: [GGI-A-20](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/51_activity_20.md).\n\n### Description\n\nThis activity is about proactively selecting OSS solutions, either vendor or community-supported, in business-oriented areas. It may also cover defining preference policies for the selection of open source business application software.\n\nWhile open source software is most often used by IT professionals -- operating system, middleware, DBMS, system administration, development tools -- it has yet to be recognised in areas where business professionals are the primary users.\n\nThe activity concerns areas such as: Office suites, Collaboration environments, User management, Workflow management, Customer relationship management, Email, e-Commerce, etc.\n\n### Opportunity Assessment\n\nAs open source becomes mainstream it reaches out well beyond operating systems and development tools, it increasingly finds its way into the upper layers of the information systems, well into the business applications.\nIt is relevant to identify what OSS applications are successfully used to meet the needs of the organisation and how they can become an organisation's cost-saving preferred choice.\n\nThe activity may bring some retraining and migration costs.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] There is a list of recommended OSS solutions to address pending needs in business applications.\n- [ ] A preference policy for the selection of open source business application software is drafted.\n- [ ] Proprietary business applications in use are being evaluated against OSS equivalents.\n- [ ] Procurement process and calls for proposals specify open source preference (if legally doable).\n\n### Tools\n\nAt this stage, we cannot think of any tool relevant or concerned by this Activity.\n\n### Recommendations\n\n- Talk to colleagues, learn from what other companies comparable to yours do.\n- Visit local industry events to find out about OSS solutions and professional support.\n- Try out community editions and community support first before committing to paid support plans.\n\n### Resources\n\n- [What is enterprise open source?](https://www.redhat.com/en/blog/what-enterprise-open-source): a quick read about enterprise-ready open source.\n- [101 Open Source Apps to Help your Business Thrive](https://digital.com/creating-an-llc/open-source-business/): An indicative list of business-oriented open source solutions.\n\n### Proposed next activities\n\n- [GGI-A-33 - Engage with open source vendors](https://ospo-alliance.org/ggi/activities/engage_with_open_source_vendors) Improve confidence in your open source assets by engaging with open source professionals.\n- [GGI-A-43 - Open source procurement policy](https://ospo-alliance.org/ggi/activities/open_source_procurement_policy) OSS Enterprise usage will be optimised by knowing what assets are already there, and having a clear procurement policy on the matter. "
    },
    {
      "id": "GGI-A-42",
      "name": "Manage open source skills and resources",
      "path": "51_activity_42.md",
      "roles": [
        "Team Leader"
      ],
      "goal": "Usage Goal",
      "content": "## Manage open source skills and resources\n\nActivity ID: [GGI-A-42](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/51_activity_42.md).\n\n### Description\n\nThis activity is focused on **software development** skills and resources. It includes the technologies and specific development skills of developers, as well as the overall development processes, methods and tools.\n\nA vast amount of documentation, forums and discussions stemming from the ecosystem, and public resources is available for open source technologies. In order to fully benefit from their open source approach, one has to establish a roadmap of its current assets and desired targets to set up a consistent program for development skills, methods and tools within the teams.\n\n**Domains of application**\n\nOne needs to establish the domains where the program will be applied, and how it will improve the quality and efficiency of code and practices. As an example, the program won't have the same benefits if there is only a single developer working on open source components, or if the whole development life cycle is optimised to include open source best practices.\n\nOne needs to define the scope to be embraced for open source development: technical components, applications, modernising or creating new development. Examples of development practices that can benefit from open source are:\n\n- Cloud administration.\n- Cloud-native applications, how to innovate with these technologies.\n- DevOps, Continuous Integration / Continuous Delivery.\n\n**Categories**\n\n- Skills and resources required to develop open source software: IP, licensing, practices.\n- Skills and resources required to develop software using open source components, languages, technologies.\n- Skills and resources required to use open source methods and processes.\n\n### Opportunity Assessment\n\nOpen source tools are increasingly popular among developers. This Activity addresses the need to avoid the proliferation of heterogeneous tools within a development team. It helps define a policy in this domain. It helps optimise training and experience building. A skills inventory is used for recruitment, training and succession planning in case a key employee leaves the company.\n\nWe would need a methodology to map open source software development skills.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] There is a description of the open source production chain (the \"software supply chain\"),\n- [ ] There is a plan (or a wish list) for the rationalisation of development resources,\n- [ ] There is a skills inventory summarising current developers' skills, education, and experience,\n- [ ] There is a training wish list and program dealing with skills gaps,\n- [ ] There is a list of missing open source development best practices and a plan to apply them.\n\n### Recommendations\n\n- Start simple, grow the analysis and roadmap steadily.\n- When recruiting, set a strong emphasis on open source skills and experience. It's always easier when people already have an open source DNA than training and coaching people.\n- Check training programs from software vendors and open source schools.\n\n### Resources\n\nMore information:\n\n- An introduction to [what is a Skills Inventory?](https://managementisajourney.com/management-toolbox-better-decision-making-with-a-skills-inventory) from Robert Tanner.\n- An article about open source skills: [5 Open Source Skills to Up Your Game and Your Resume](https://sourceforge.net/blog/5-open-source-skills-game-resume/)\n\nThis activity can include technical resources and skills such as:\n\n- **Popular languages** (such as Java, PHP, Perl, Python).\n- **Open source frameworks** (Spring, AngularJS, Symfony) and testing tools.\n- Agile, DevOps and open source **development methods and best practices**.\n\n### Proposed next activities\n\n- [GGI-A-28 - Human Resources perspective](https://ospo-alliance.org/ggi/activities/hr_perspective) Once open source resources have been identified internally to help with open source awareness, make the Human Resources department value them as well, for both existing and future employees.\n\n"
    },
    {
      "id": "GGI-A-21",
      "name": "Manage legal compliance",
      "path": "52_activity_21.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Trust Goal",
      "content": "## Manage legal compliance\n\nActivity ID: [GGI-A-21](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/52_activity_21.md).\n\n### Description\n\nOrganisations need to implement a legal compliance process to secure their usage and participation in open source projects.\n\nMature and professional management of legal compliance, in the organisation and across the supply chain, is about:\n\n- Performing a thorough analysis of the intellectual property that includes licence identification and compatibility checking.\n- Ensuring the organisation can safely use, integrate, modify and redistribute open source components as part of its products or services.\n- Providing employees and contractors with a transparent process about how to create and contribute to open source software.\n\n_Software Composition Analysis (SCA)_:  A significant part of legal and IP issues result from the usage of components released under licences that are either incompatible between them or incompatible with the way the organisation wants to use and redistribute the components. SCA is the first step in sorting out those issues as \"you need to know the problem to fix it\". The process is to identify all the components involved in a project in a Bill of Material document, including build and test dependencies.\n\n_Licence checking_: A licence checking process uses a tool to automatically analyse the code base and identify licences and copyrights within. If executed regularly and ideally integrated into continuous build and integration chains, this allows catching IP issues early.\n\n### Opportunity Assessment\n\nWith the ever-growing use of OSS in an organisation's information systems, it is essential to assess and manage potential legal exposure.\n\nHowever, checking licences and copyrights can be tricky and costly. Developers need to be able to check IP and legal questions quickly.\nHaving a team and a corporate officer dedicated to IP and legal questions ensures proactive and consistent management of legal questions, helps secure open source components' usage and contributions and provides a clear strategic vision.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] There is an easy-to-use Licence checking process available for projects.\n- [ ] There is an easy-to-use IP checking process available for projects.\n- [ ] There is a team or person responsible for legal compliance within the organisation.\n- [ ] Regular audits to assess legal compliance are scheduled.\n\nOther ways to set up verification points:\n\n- [ ] There is an easy-to-use licence checking process.\n- [ ] There is an easy-to-use legal/IP team.\n- [ ] All projects provide the required information for people to use and contribute to the project.\n- [ ] There is a contact in the team for questions related to IP and licencing.\n- [ ] There is a corporate officer dedicated to IP and licencing.\n- [ ] There is a dedicated team for questions related to IP and licencing.\n\n### Tools\n\n- [ScanCode](https://scancode-toolkit.readthedocs.io)\n- [Fossology](https://www.fossology.org/)\n- [SW360](https://www.eclipse.org/sw360/)\n- [Fossa](https://github.com/fossas/fossa-cli)\n- [OSS Review Toolkit](https://oss-review-toolkit.org)\n\n### Recommendations\n\n- Inform people about the risks associated with licensing in conflict with business goals.\n- Propose an easy solution for projects to set up licence checking on their codebase.\n- Communicate on its importance and help projects to add it to their CI systems.\n- Provide a template or official guidelines for project structure.\n- Set up automated checks to make sure that all projects comply with the guidelines.\n- Consider conducting an internal audit to identify licences of the company infrastructure.\n- Provide basic IP and licensing training for at least one person per team.\n- Provide complete IP and licencing training for the officer.\n- Set up a process to escalate IP and licencing issues to the officer.\n\nRemember that compliance is not just about legal; it's also about IP. So here are a few questions to help understand the consequences of legal compliance:\n\n- If I distribute an open source component and do not respect the licence conditions, I infringe the licence --> legal implications.\n- If I use an open source component within a project that I wish to distribute/publish, that licence may oblige visibility on elements of code that I do not want to make open source --> Confidentiality impact for my company's tactical advantage and with 3rd parties (legal implications).\n- It is an open discussion about whether using an open source licence for a project I want to publish grants relevant IP --> IP implications.\n- If I make a project open source _before_ any patent process, that _probably_ excludes the creation of patents concerning the project --> IP implications.\n- If I make a project open source _after_ any patent process, that _probably_ allows the creation of (defensive) patents concerning that project --> IP potential.\n- In complex projects that bring in many components with many dependencies, the multitude of open source licences may exhibit incompatibilities between licences --> legal implications (cf. activity GGI-A-23 - Manage software dependencies).\n\n### Resources\n\n- There is an extensive list of tools on the [Existing OSS compliance group page](https://oss-compliance-tooling.org/Tooling-Landscape/OSS-Based-licence-Compliance-Tools/).\n- [Recommended Open Source Compliance Practices for the enterprise](https://www.ibrahimatlinux.com/wp-content/uploads/2022/01/recommended-oss-compliance-practices.pdf). A book by Ibrahim Haddad, from the Linux Foundation, about open source compliance practices for the enterprise.\n [OpenChain Project](https://www.openchainproject.org/)\n\n### Proposed next activities\n\n- [GGI-A-24 - Manage key indicators](https://ospo-alliance.org/ggi/activities/manage_key_indicators) Make legal compliance concerns, processes and results visible and measurable. This will help people realise its importance earlier in the process.\n\n"
    },
    {
      "id": "GGI-A-22",
      "name": "Manage software vulnerabilities",
      "path": "52_activity_22.md",
      "roles": [
        "Team Leader"
      ],
      "goal": "Trust Goal",
      "content": "## Manage software vulnerabilities\n\nActivity ID: [GGI-A-22](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/52_activity_22.md).\n\n### Description\n\nOne's code is as secure as its least secure part. Recent cases (e.g. heartbleed[^heartbleed], equifax[^equifax]) have demonstrated the importance of checking vulnerabilities in parts of the code that are not directly developed by the entity. Consequences of exposures range from data leaks (with tremendous reputational impact) to ransomware attacks and business-threatening unavailability of services.\n\nOpen source software is known to have better vulnerability management than proprietary software, mainly because:\n\n- More eyes are looking to find and fix problems on open code and processes.\n- Open source projects fix vulnerabilities and release patches and new versions a lot faster.\n\nFor example, a [study by WhiteSource](https://resources.whitesourcesoftware.com/blog-whitesource/3-reasons-why-open-source-is-safer-than-commercial-software) on proprietary software showed that 95% of the vulnerabilities found in their open source components had already released a fix at the time of the analysis. The issue, therefore, is to **better manage vulnerabilities both in the codebase and its dependencies**, no matter if they are closed or open source.\n\nIn order to mitigate these risks, one has to set up an assessment program of its software assets and a vulnerability-checking process executed regularly. Implement tools that alert impacted teams, manage known vulnerabilities, and prevent threats from software dependencies.\n\n### Opportunity Assessment\n\nAny company that uses software has to watch its vulnerabilities in:\n\n- its infrastructure (e.g. Cloud infrastructure, network infrastructure, data stores),\n- its business applications (HR, CRM tools, internal and customers-related data management),\n- its in-house code: e.g. the company's website, internal development projects, etc.,\n- and all direct and indirect software and services dependencies.\n\nThe ROI of vulnerabilities is little known until something bad happens. One has to consider the consequences of a major data breach or unavailability of services to estimate the true cost of vulnerabilities.\n\nSimilarly, a culture of secrecy and hiding for security-related issues inside the company has to be avoided at all costs. Instead, information about the state of vulnerability needs to be shared and discussed to find the best answers from the right people, from developers to c-level executives.\n\nThe benefits of preventing cyber-attacks by carefully managing software vulnerabilities are manyfold:\n\n- Avoid reputational risks,\n- Avoid exploitation loss (DDoS, Ransomware, Time to rebuild an alternative IT system after an attack),\n- Comply with data protection regulations.\n\nManaging OSS software vulnerabilities is just a part of the larger cybersecurity process that globally addresses the security of the systems and services in the organisation.\n\n### Progress Assessment\n\nThere should be a dedicated person or team to monitor vulnerabilities and easy-to-use processes for developers to rely on. Vulnerabilities assessment is a standard part of the continuous integration process, and people are able to monitor the current state of risk in a dedicated dashboard.\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] Activity is covered when all in-house software and services are assessed and monitored for known vulnerabilities.\n- [ ] Activity is covered when a dedicated tool and process is implemented in the software production chain to prevent the introduction of issues in the daily development routines.\n- [ ] A person or team is responsible for evaluating CVE/vulnerability risk against exposure.\n- [ ] A person or team is responsible for dispatching CVE/vulnerability to concerned people (SysOps, DevOps, developers, etc.).\n\n### Tools\n\n- GitHub tools\n   - GitHub provides guidelines and tools to secure code hosted on the platform. See [GitHub docs](https://docs.github.com/en/github/administering-a-repository/about-securing-your-repository) for more information.\n   - GitHub provides [Dependabot](https://docs.github.com/en/github/managing-security-vulnerabilities/about-alerts-for-vulnerable-dependencies) to identify vulnerabilities in dependencies automatically.\n- [Eclipse Steady](https://eclipse.github.io/steady/) is a free, open source tool that analyses Java and Python projects for vulnerabilities and helps developers mitigate them.\n- [OWASP dependency-check](https://owasp.org/www-project-dependency-check/): an open source vulnerability scanner.\n- [OSS Review Toolkit](https://github.com/oss-review-toolkit/ort): an open source orchestrator able to collect security advisories for used dependencies from configured vulnerability data services.\n\n### Resources\n\n- The [MITRE's vulnerability database](https://cve.mitre.org/) of CVEs. See also [NIST's security database](https://nvd.nist.gov/) of NVDs, and satellite resources like [CVE Details](https://www.cvedetails.com/).\n- Check also this new initiative from Google: the [open source Vulnerabilities](https://osv.dev/).\n- The OWASP working group publishes a list of vulnerabilities scanners [on their website](https://owasp.org/www-community/Vulnerability_Scanning_Tools), both from the commercial and open source worlds.\n- J. Williams and A. Dabirsiaghi. The unfortunate reality of insecure libraries, 2012.\n- [Detection, assessment and mitigation of vulnerabilities in open source dependencies](https://link.springer.com/article/10.1007/s10664-020-09830-x), Serena Elisa Ponta, Henrik Plate & Antonino Sabetta, Empirical Software Engineering volume 25, pages 3175\u20133215(2020).\n- [A Manually-Curated Dataset of Fixes to Vulnerabilities of open source Software](https://arxiv.org/abs/1902.02595), Serena E. Ponta, Henrik Plate, Antonino Sabetta, Michele Bezzi, C\u00e9dric Dangremont. There is also a [toolkit in development to implement the aforementioned dataset](https://sap.github.io/project-kb/).\n\n[^heartbleed]: https://www.wikipedia.org/wiki/Heartbleed\n[^equifax]: https://arstechnica.com/information-technology/2017/09/massive-equifax-breach-caused-by-failure-to-patch-two-month-old-bug/\n\n### Proposed next activities\n\n- [GGI-A-24 - Manage key indicators](https://ospo-alliance.org/ggi/activities/manage_key_indicators) Make identified vulnerabilities visible. This will help people realise how secure or not their software is, and demonstrate the importance of selecting proper dependencies.\n\n\n"
    },
    {
      "id": "GGI-A-23",
      "name": "Manage software dependencies",
      "path": "52_activity_23.md",
      "roles": [
        "Team Leader",
        "Developer"
      ],
      "goal": "Trust Goal",
      "content": "## Manage software dependencies\n\nActivity ID: [GGI-A-23](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/52_activity_23.md).\n\n### Description\n\nA *dependency identification* program looks for the dependencies actually used within the codebase. As a result, the organisation must establish and maintain a list of known dependencies for its code base and watch the evolution of the identified providers.\n\nEstablishing and maintaining a list of known dependencies is an enabler for, and a prerequisite to:\n\n- IP and licence checking: some licences cannot be mixed, even as a dependency. One has to know its dependencies to assess its associated legal risks.\n- Vulnerabilities management: the entire piece of software is as weak as its weakest part: see the example of the [Heartbleed flaw](https://en.wikipedia.org/wiki/Heartbleed). One has to know its dependencies to assess its associated security risks.\n- Lifecycle and sustainability: an active community on the dependency project is a bright sign for bug corrections, optimisations, and new features.\n- Thoughtful selection of used dependencies, according to \"maturity\" criteria - the goal being to use open source components that are safe, with a sane and well-maintained codebase, and a living, active and reactive community that will accept external contributions, etc.\n\n### Opportunity Assessment\n\nIdentifying and tracking dependencies is a required step to mitigate the risks associated with any code reuse. In addition, implementing tools and processes to manage software dependencies is a prerequisite to properly manage quality, compliance, and security.\n\nConsider the following questions:\n\n- What is the company's risk (cost, reputation, etc.) if the software is corrupted, attacked or sued?\n- Is the code base considered critical for people, the organisation, or business?\n- What if a component upon which an application depends changes its repository?\n\nThe minimal and first step is to implement a software composition analysis (SCA) tool. Support by specialised consulting firms may be required for a full-fledged SCA or dependency mapping.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] Dependencies are identified in all in-house developed code.\n- [ ] Dependencies are identified in all external code executed within the company.\n- [ ] An easy-to-setup software composition analysis or dependency identification procedure is available for projects to add to their Continuous Integration process.\n- [ ] Dependency analysis tools are used.\n\n### Tools\n\n- [OWASP Dependency check](https://github.com/jeremylong/DependencyCheck): dependency-Check is a Software Composition Analysis (SCA) tool that attempts to detect publicly disclosed vulnerabilities contained within a project\u2019s dependencies.\n- [OSS Review Toolkit](https://oss-review-toolkit.org/): a suite of tools to assist with reviewing Open Source Software dependencies.\n- [Fossa](https://github.com/fossas/fossa-cli): fast, portable and reliable dependency analysis. Supports licence & vulnerability scanning. Language-agnostic; integrates with 20+ build systems.\n- [Software 360](https://projects.eclipse.org/projects/technology.sw360).\n- [Eclipse Dash license tool](https://github.com/eclipse/dash-licenses): takes a list of dependencies and requests [ClearlyDefined](https://clearlydefined.io) to check their licences.\n- [The FOSSology Project](https://www.fossology.org/): FOSSology is an open source project with the mission of advancing open source license compliance.\n\n### Recommendations\n\n- Conduct regular audits about the dependencies and IP requirements to mitigate legal risks.\n- Ideally, integrate dependencies management in the Continuous integration process so that issues (new dependency, licence incompatibility) are identified and fixed as soon as possible.\n- Keep track of dependency-related vulnerabilities, keep users and developers informed.\n- Inform people about the risks associated with wrong licencing.\n- Propose an easy solution for projects to set up licence checking on their codebase.\n- Communicate on its importance and help projects to add it to their CI systems.\n- Set up a visible KPI for dependency-related risks.\n\n### Resources\n\n- Existing [OSS-licenced OSS licence compliance tools](https://oss-compliance-tooling.org/Tooling-Landscape/OSS-Based-licence-Compliance-Tools/) group page.\n- [Free and Open Source Software licence Compliance: Tools for Software Composition Analysis](https://www.computer.org/csdl/magazine/co/2020/10/09206429/1npxG2VFQSk), by Philippe Ombredanne, nexB Inc.\n- [Software Sustainability Maturity Model](http://oss-watch.ac.uk/resources/ssmm).\n- [CHAOS](https://chaoss.community/): Community Health Analytics Open Source Software.\n\n### Proposed next activities\n\n- [GGI-A-21 - Manage legal compliance](https://ospo-alliance.org/ggi/activities/manage_legal_compliance) Before being able to track IP and licences incompatibilities, one needs to identify all dependencies in their open source software.\n- [GGI-A-22 - Manage software vulnerabilities](https://ospo-alliance.org/ggi/activities/manage_software_vulnerabilities/) Before being able to track vulnerabilities in their code assets, one needs to identify all dependencies in their open source software.\n"
    },
    {
      "id": "GGI-A-24",
      "name": "Manage key indicators",
      "path": "52_activity_24.md",
      "roles": [
        "Decision Maker",
        "Team Leader"
      ],
      "goal": "Trust Goal",
      "content": "## Manage key indicators\n\nActivity ID: [GGI-A-24](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/52_activity_24.md).\n\n### Description\n\nThis activity collects and monitors a set of indicators that inform day-to-day managerial decisions and strategic options concerning professionally managed open source software.\n\nKey metrics related to open source software form the backdrop of how well governance programmes are rolled out. The activity covers selecting a few indicators, publishing them to the teams and management, and sending regular updates on the initiative, e.g. via a newsletter or corporate news.\n\nThis activity requires:\n\n- stakeholders to discuss and define the objectives of the program,\n- the implementation of a measurement and data collection tool connected to the development infrastructure,\n- the publication of at least one dashboard for the stakeholders and for all the people involved in the initiative.\n\nIndicators are based on data that must be collected from relevant sources. Fortunately, there are plenty of sources for open source software engineering. Examples include:\n\n- the development environment, the CI/CD production chain,\n- the HR department,\n- the testing and software composition analysis tools,\n- the repositories.\n\nExamples of indicators include:\n\n- Number of resolved dependencies, displayed by licence type.\n- Number of outdated/vulnerable dependencies.\n- Number of licencing/ip issues detected.\n- Contributions made to external projects.\n- Bug open time.\n- Number of contributors on a component, number of commits, etc.\n\nThis activity is about defining these requirements and measurement needs, and implementing a dashboard that shows in a simple and efficient manner the main indicators of the program.\n\n### Opportunity Assessment\n\nKey indicators help understand and better manage the resources devoted to open source software, and measure the results in order to communicate effectively and reap the full benefits of the investment. By communicating broadly, more people can follow the initiative and will feel involved, ultimately making it an organisation-level concern and goal.\n\nWhile each activity has evaluation criteria that help answer questions about progress achieved, there is still a need for monitoring done with numbers and quantitative indicators.\n\nWhether in a small startup or a large global company, key metrics help keep teams focused and monitor performance.  Metrics are crucial because they support decision-making and are the basis for monitoring decisions already taken.\n\nWith simple and practical numbers and graphics, the whole organisation members will be able to follow and synchronise efforts regarding open source, making it a shared concern and action. This also allows the various actors to better enter the course, contribute to the project and get the overall benefits.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] A list of metrics and how to collect them has been established.\n- [ ] Tools to collect, store, process and display indicators are used.\n- [ ] There is a generalised dashboard available to all participants that shows the progress made on the initiative.\n\n### Tools\n\n- [GrimoireLab](https://chaoss.github.io/grimoirelab) from Bitergia.\n- Generic BI tools (elasticsearch, grafana, R/Python visualisations\u2026) are a good fit too, when the proper connectors are setup according to the defined goals.\n\n### Recommendations\n\n- Write down the objectives and roadmap of the open source Governance.\n- Communicate in-house about the actions and status of the initiative.\n- Involve people in the definition of KPIs, in order to make sure that\n   - they are well understood,\n   - they provide a complete view of the needs and\n   - they are considered and followed.\n- Build at least one dashboard that can be displayed for everybody (e.g. on a screen in the room), with essential indicators to show the progress and overall situation.\n\n### Resources\n\n- The [CHAOSS community](https://chaoss.community/) has many good references and resources related to open source indicators.\n- Check out metrics for [Project Attributes](https://www.ow2.org/view/MRL/Stage2-ProjectAttributes) from the OW2 Market Readiness Levels [methodology](https://www.ow2.org/view/MRL/Overview).\n- [A New Way of Measuring Openness: The Open Governance Index](https://timreview.ca/article/512) by Liz Laffan is an interesting reading about openness in open source projects.\n- [Governance Indicators: A Users\u2019 Guide](https://anfrel.org/wp-content/uploads/2012/02/2007_UNDP_goveranceindicators.pdf) is the UN's guide about governance indicators. Although it is applied to democracy, corruption and transparency of nations, the basics of measurement and indicators as applied to governance are well worth a read.\n\n### Proposed next activities\n\n- [GGI-A-37 - Open source enabling digital transformation](https://ospo-alliance.org/ggi/activities/open_source_enabling_digital_transformation) Use produced metrics as part of your general open source strategy.\n"
    },
    {
      "id": "GGI-A-44",
      "name": "Run code reviews",
      "path": "52_activity_44.md",
      "roles": [
        "Team Leader",
        "Developer"
      ],
      "goal": "Trust Goal",
      "content": "## Run code reviews\n\nActivity ID: [GGI-A-44](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/52_activity_44.md).\n\n### Description\n\nCode review is a routine task involving manual and/or automated review of an application's source code before releasing a product or delivering a project to the customer. In the case of open-source software, code review is more than just about catching errors opportunistically; it is an integrated approach to collaborative development carried out at the team level.\n\nCode reviews should apply to code developed in-house as well as to code reused from external sources, as it improves general confidence in code and reinforces ownership. It is also an excellent way to enhance global skills and knowledge within the team and foster team collaboration.\n\n### Opportunity Assessment\n\nCode reviews are valuable whenever the organisation develops software or reuses external pieces of software.\nWhile being a standard step in the software engineering process, code reviews in the context of open-source bring specific benefits such as:\n\n- When publishing internal source code, verify adequate quality guidelines are respected.\n- When contributing to an existing open source project, verify that guidelines of the targeted project are respected.\n- The publicly available documentation is updated accordingly.\n\nIt is also an excellent opportunity to share and enforce some of your company legal compliance policy rules, such as:\n\n- Never remove existing licence headers or copyrights found in reused open-source code.\n- Do not copy & paste source code from Stack Overflow without prior permission from the legal team.\n- Include the correct copyright line when required.\n\nCode reviews will bring trust and confidence to code. If people are not sure about the quality or potential risks of using a software product, they should conduct peer- and code- reviews.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] Open source code review is recognised as a necessary step.\n- [ ] Open source code reviews are planned (either regularly or at critical moments).\n- [ ] A process for conducting open-source code reviews has been collectively defined and accepted.\n- [ ] Open-source code reviews are a standard part of the development process.\n\n### Recommendations\n\n- Code review is a collective task that works better in a good collaborative environment.\n- Do not hesitate to use existing tools and patterns from the open-source world, where code reviews have been a standard for years (decades).\n\n### Resources\n\n- [What is Code Review?](https://openpracticelibrary.com/practice/code-review/): a didactic read on code review found on Red Hat's Open Practice Library.\n- [Best Practices for Code Reviews](https://www.perforce.com/blog/qac/9-best-practices-for-code-review): another interesting perspective on what code review is about.\n\n### Proposed next activities\n\n- [GGI-A-26 - Contribute to open source projects](https://ospo-alliance.org/ggi/activities/contribute_to_open_source_projects) Code review is common practice in open source projects, for it improves code quality and knowledge sharing. Contributors performing code reviews usually feel more comfortable with external contributions and collaboration.\n\n"
    },
    {
      "id": "GGI-A-25",
      "name": "Promote open source development best practices",
      "path": "53_activity_25.md",
      "roles": [
        "Team Leader",
        "Developer"
      ],
      "goal": "Culture Goal",
      "content": "## Promote open source development best practices\n\nActivity ID: [GGI-A-25](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/53_activity_25.md).\n\n### Description\n\nThis activity is about defining, actively promoting and implementing open source best practices within the development teams.\n\nAs a starting point the following topics might be considered for attention:\n\n- User and developer documentation.\n- Proper organisation of the project on a publicly accessible repository.\n- Promote and implement controlled reuse.\n- Providing a complete and up-to-date product documentation.\n- Configuration Management: git workflows, collaborative patterns.\n- Release management: release early & release often, stable vs development versions, etc.\n\nOSS projects have a special, [bazaar-like](http://www.catb.org/~esr/writings/cathedral-bazaar/) modus operandi. In order to allow and foster this collaboration and mindset, some practices are recommended that facilitate collaborative and decentralised development and contributions from third-party developers\u2026\n\n#### Community documents\n\nMake sure that all projects within the company propose the following documents:\n\n- README -- quick description of the project, how to interact, links to resources.\n- Contributing -- introduction for people willing to contribute.\n- Code Of Conduct -- What is acceptable -- or not -- as behaviour within the community.\n- LICENSE -- the default licence of the repository.\n\n#### REUSE best practices\n\n[REUSE](https://reuse.software) is an initiative from the [Free Software Foundation Europe](https://fsfe.org/) to improve reuse of software and streamline OSS and licence compliance.\n\n### Opportunity Assessment\n\nAlthough it heavily depends on the OSS common-knowledge among the team, training people and creating processes that enforce these practices is always beneficial. It is even more important when:\n\n- potential users and contributors are not known,\n- developers are not used to open source development.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] Project sets a list of open source best practices to comply with.\n- [ ] Project monitors its alignment with best practices.\n- [ ] Development team has built awareness about complying with OSS best practices.\n- [ ] New best practices are regularly evaluated, and an effort is made to implement them.\n\n### Tools\n\n- The [REUSE helper tool](https://github.com/fsfe/reuse-tool) assists with making a repository conformant with the [REUSE](https://reuse.software) best practices. It can be included in many development processes to confirm the current status.\n- [ScanCode](https://scancode-toolkit.readthedocs.io) has the ability to list all community and legal documents in the repository: see [feature description](https://scancode-toolkit.readthedocs.io/en/latest/cli-reference/scan-options-pre.html#classify).\n- GitHub has a nice feature to [check for missing community documents](https://docs.github.com/articles/viewing-your-community-profile). It can be found in the Repository page > \"Insights\" > \"Community\".\n\n### Recommendations\n\n- The list of best practices depends on the context and domain of the program and should be re-evaluated regularly in a continuous improvement manner. Practices should be monitored and regularly assessed to track down progress.\n- Train people about OSS reuse (as consumers) and ecosystems (as contributors).\n- Implement REUSE.software as in activity #14.\n- Set up a process to manage legal risks associated with reuse and contributions.\n- Explicitly encourage people to contribute to external projects.\n- Provide a template or official guidelines for project structure.\n- Set up automated checks to make sure that all projects comply with the guidelines.\n\n### Resources\n\n- [OW2's list of open source best practices](https://www.ow2.org/view/MRL/Full_List_of_Best_Practices) from the Market Readiness Levels assessment methodology.\n- [REUSE's official website](https://reuse.software) with specification, tutorial, and FAQ.\n- [GitHub's community guidelines](https://opensource.guide/).\n- An example of [configuration management best practices using GitHub](https://dev.to/datreeio/top-10-github-best-practices-3kl2).\n\n### Proposed next activities\n\n- [GGI-A-42 - Manage open source skills and resources](https://ospo-alliance.org/ggi/activities/manage_open_source_skills_and_resources) You can add the list of open source development best practices identified to the general training material.\n- [GGI-A-44 - Run code reviews](https://ospo-alliance.org/ggi/activities/run_code_reviews/) Code review is an essential element of development best practices.\n\n"
    },
    {
      "id": "GGI-A-26",
      "name": "Contribute to open source projects",
      "path": "53_activity_26.md",
      "roles": [
        "Team Leader",
        "Developer"
      ],
      "goal": "Culture Goal",
      "content": "## Contribute to open source projects\n\nActivity ID: [GGI-A-26](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/53_activity_26.md).\n\n### Description\n\nContributing to open source projects that are freely used is one of the key principles of good governance. The point is to avoid being a simple passive consumer and give back to the projects. When people add a feature or fix a bug for their own purpose, they should make it generic enough to contribute to the project. Developers must be allowed time for contributions.\n\nThis activity covers the following scope:\n\n- Working with upstream open source projects.\n- Reporting bugs and feature requests.\n- Contributing code and bug fixes.\n- Participating in community mailing lists.\n- Sharing experience.\n\n### Opportunity Assessment\n\nThe main benefits of this activity are:\n\n- It increases the general knowledge and commitment to open source within the company, as people start contributing and get involved in open source projects. They get a feeling of public utility and improve their personal reputation.\n- The company increases its visibility and reputation as contributions make their way through the contributed project. This shows that the company is actually involved in open source, contributes back, and promotes fairness and transparency.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] There is a clear and official path for people willing to contribute.\n- [ ] Developers are encouraged to contribute back to open source projects they use.\n- [ ] A process is in place to ensure legal compliance and security of contributions by developers.\n- [ ] KPI: Volume of external contributions (code, mailing lists, issues..) by individual, team, or entity.\n\n### Tools\n\nIt may be useful to follow contributions, both to keep track of what is contributed and to be able to communicate on the company's effort. Dashboards and activity tracking software can be used for this purpose. Check:\n\n- Bitergia's [GrimoireLab](https://chaoss.github.io/grimoirelab/)\n- [ScanCode](https://scancode-toolkit.readthedocs.io)\n\n### Recommendations\n\nEncourage people within the entity to contribute to external projects, by:\n\n- Allowing them time to write generic, well-tested bug fixes and features, and to contribute them back to the community.\n- Providing training to people about contributing back to open source communities. This is both about technical skills (improving your team's knowledge) and community (belonging to the open source communities, code of conduct, etc.).\n- Provide training on legal, IP, technical issues, and set up a contact within the company to help with these topics if people have doubts.\n- Provide incentives for published work.\n- Note that contributions from the company/entity will reflect its code quality and involvement, so make sure your development team provides code that is good enough.\n\n### Resources\n\n- The [CHAOSS](https://chaoss.community/) initiative from the Linux Foundation has some tools and pointers about how to track contributions in development.\n\n### Proposed next activities\n\n- [GGI-A-31 - Publicly assert use of open source](https://ospo-alliance.org/ggi/activities/publicly_assert_use_of_open_source) Now that there is some publicly visible contribution and commitment from the organisation, start communicating about it!\n- [GGI-A-24 - Manage key indicators](https://ospo-alliance.org/ggi/activities/manage_key_indicators) Make contribution to OSS projects visible and measurable. This will help with the dissemination of the initiative and uplift people's moral.\n- [GGI-A-27 - Belong to the open source community](https://ospo-alliance.org/ggi/activities/belong_to_the_open_source_community) Contributing to the OSS community is the first step to becoming part of it. Once people start contributing, they become more involved in the project's health and governance and can eventually become maintainers, ensuring a sustainable and healty project and roadmap.\n- [GGI-A-29 - Engage with open source projects](https://ospo-alliance.org/ggi/activities/engage_with_open_source_projects) Open source projects value meritocracy. Now that you have demonstrated a good understanding of the code and processes, you can get involved in the project and make your contributions more official.\n- [GGI-A-36 - Open source enabling innovation](https://ospo-alliance.org/ggi/activities/open_source_enabling_innovation) Contributing to OSS projects and interacting with external contributors is an enabler to foster innovation.\n- [GGI-A-39 - Upstream first](https://ospo-alliance.org/ggi/activities/upstream_first) Contributing to OSS projects really makes sense if the updates are made available in the upstream project, on a regular and institutionalised basis.\n"
    },
    {
      "id": "GGI-A-27",
      "name": "Belong to the open source community",
      "path": "53_activity_27.md",
      "roles": [
        "Team Leader",
        "Decision Maker"
      ],
      "goal": "Culture Goal",
      "content": "## Belong to the open source community\n\nActivity ID: [GGI-A-27](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/53_activity_27.md).\n\n### Description\n\nThis activity is about developing among developers a feeling of belonging to the greater open source community. As with every community, people and entities have to participate and contribute back to the whole. It reinforces the links between practitioners and brings sustainability and activity to the ecosystem. On a more technical side, it allows choosing the priorities and roadmap of projects, improves the level of general knowledge and technical awareness.\n\nThis activity covers the following:\n\n- **Identify events** worth attending. Connecting people, learning about new technologies and building a network are key factors to get the full benefits of open-source.\n- Consider **foundation memberships**. Open-source foundations and organisations are a key component of the open-source ecosystem. They provide technical and organisational resources to projects, and are a good neutral place for sponsors to discuss common issues and solutions, or work on standards.\n- Watch **working groups**. Working groups are neutral collaborative workspaces where experts interact on a specific domain like IoT, modelling or science. They are a very efficient and cost-effective mechanism to tackle common, albeit domain-specific concerns together.\n- **Budget participation**. At the end of the journey, money is the enabler. Plan required expenses, allow people paid time for these activities, anticipate next moves, so the program doesn't have to stop after a few months short of funding.\n\n### Opportunity Assessment\n\nOpen source works best when done in relation with the open source community at large. It facilitates bug fixing, solution sharing, etc.\n\nIt is also a good way for companies to show their support to open-source values. Communicating about the company's involvement is important both for the company's reputation and for the open-source ecosystem.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] A list of events people could attend is drafted.\n- [ ] There is a monitoring of public talks given by team members.\n- [ ] People can submit event participation requests.\n- [ ] People can submit projects for sponsorship.\n\n### Recommendations\n\n- Survey people to get to know what events they like or would be the most beneficial for their work.\n- Set up in-house communications (newsletter, resource centre, invitations\u2026) so people know about the initiatives and can participate.\n- Make sure that these initiatives can benefit various types of people (developers, administrators, support\u2026), not only C-level executives.\n\n### Resources\n\n- [What motivates a developer to contribute to open source software?](https://clearcode.cc/blog/why-developers-contribute-open-source-software/) An article by Michael Sweeney on clearcode.cc.\n- [Why companies contribute to open source](https://blogs.vmware.com/opensource/2020/12/01/why-companies-contribute-to-open-source/) An article by Velichka Atanasova from VMWare.\n- [Why your employees should be contributing to open source](https://www.cloudbees.com/blog/why-your-employees-should-be-contributing-to-open-source/) A good read by Robert Kowalski from CloudBees.\n- [7 ways your company can support open source](https://www.infoworld.com/article/2612259/7-ways-your-company-can-support-open-source.html) An article from Simon Phipps for InfoWorld.\n- [Events: the life force of open source](https://www.redhat.com/en/blog/events-life-force-open-source) An article by Donna Benjamin from RedHat.\n\n### Proposed next activities\n\n- [GGI-A-28 - HR perspective](https://ospo-alliance.org/ggi/activities/human_resources_perspective) If the organisation belongs to the OSS community, it is easier to attract skilled people, based on the community you are involved in.\n- [GGI-A-31 - Publicly assert use of open source](https://ospo-alliance.org/ggi/activities/publicly_assert_use_of_open_source) Now that you have become a part of the OSS community, make it known! It is good for your reputation, and it is good for the project in terms of health and dissemination.\n\n"
    },
    {
      "id": "GGI-A-28",
      "name": "HR perspective",
      "path": "53_activity_28.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Culture Goal",
      "content": "## Human Resources perspective\n\nActivity ID: [GGI-A-28](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/53_activity_28.md).\n\n### Description\n\nSwitching to open source culture has deep Human Resources impacts:\n\n- **New processes and contracts**: Contracts have to be adapted to allow and promote external contributions. This includes IP and licensing issues for work done within the company, but also the ability for the employee or contractor to have their own projects.\n- **Different types of people**: People working with open source often have different incentives and mindsets than with pure proprietary, corporate people. Processes and mindsets need to adapt to this community reputation-oriented paradigm, in order to attract new types of talent and retain them along.\n- **Career development**: need to offer a career path that nurtures and values employees for their technical and soft skills as well as the competencies expected by your organisation (collaboration to drive community efforts, communication to act as spokesperson for your company, etc.). By all means, Human Resources has a key role in enabling open source as a cultural goal.\n\n**Workforce**\nFor a developer who has been working on the same proprietary solution for a long time, switching to open source may seem quite a change, and require adaptation. But for most developers, open source software only brings benefits.\n\nDevelopers getting out of school or university today have all always been working on open source.  Within a company, the large majority of developers are using open source languages and importing open source libraries or snippets every day.  It is indeed much easier to paste lines of open source code in a program than to trigger the internal sourcing process, which escalates through multiple validations through the management line.\n\nOpen source makes the job of the developer more interesting because with open source, a developer is always on the lookout to find out what their peers outside the company have been inventing, and therefore remains on the cutting edge of the technology.\n\nFor an organisation, there needs to be an Human Resources strategy to 1/ skill or re-skill the existing workforce 2/ reflect and position the company on hiring new talents hence what is the attractiveness of the company when it comes to open source.\n\n> Getting people with a good FLOSS mindset, who already understand the code, and know how to work well with others is wonderful. The alternative of evangelising / training / interning is worth doing but more expensive & time consuming.\n>\n> &mdash; <cite>OSS Software Vendor CEO</cite>\n\nThis illustrates that hiring people with open source DNA is an acceleration path to consider in Human Resources strategy.\n\n#### Processes\n\n- Establish or revisit job descriptions (technical skills, soft skills, competencies and experiences)\n- Training programs: self-training, formal training, management coaching, peer mapping, communities\n- Establish or revisit career path: competencies, key results/impact and career steps\n\n### Opportunity Assessment\n\n1. Frame development practices: the problem is probably not so much to spur developers to use more open source, but rather to make sure that they use it safely, in compliance with the licensing terms of each open source technology, and without abandoning traditional security checks (open source lines of code could contain malicious codes),\n2. Revisit collaboration practices: with development practices, the opportunity is to extend the agility and collaboration to other lines of business in your organisation. Inner sourcing is often used to foster these behaviours, though this might be half of the way to open source culture,\n3. Organisation's culture: in the end, this is all about your organisation's culture: open source can be the flagship for values such as openness, collaboration, ethics, sustainability.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] Training is available for presenting both the benefits and the constraints (Intellectual Property licensing terms compliance) related to open source.\n- [ ] Every developer, every architect, every project leader (or Product Owner/Business Owner), understands the benefits and the constraints (Intellectual Property licensing terms compliance) related to open source.\n- [ ] Developers are encouraged to contribute to open source communities, and take responsibility for them, and could receive adequate training to do it.\n- [ ] Skills and competencies are reflected in organisation job descriptions and career steps.\n- [ ] The experience that developers acquired in open source (contributions to open source communities, participation in the internal compliance process, external spokespersons for the company, ...) is taken into account in the Human Resources evaluation process.\n\n### Tools\n\n- Skills matrix.\n- Public training programs (ex. open source school).\n- Sourcing: GitHub, GitLab, LinkedIn, Meetups, Epitech, Epita\u2026\n- Contract templates (Loyalty clause).\n- Job descriptions (templates) & career steps (templates).\n\n### Recommendations\n\nMost of the time nowadays, developers already know some open source principles and are willing to work with, and on, open source software. However, there are still a few actions that the management should take:\n\n- Preference for OSS experience in hiring, even though the job for which the developer is being hired only relates to proprietary technology. Chances are, with the digital transformation, that the developer will someday have to work on open source.\n- OSS training program: Every developer, every architect, every project leader (or Product Owner/Business Owner), should have access to training resources (videos or face-to-face training) that present the benefits of open source and also the constraints in terms of Intellectual Property and licensing compliance.\n- Training should be made available for developers who want to contribute to open source communities and be part of the governance bodies of these communities (Linux certifications).\n- Recognition in the Human Resources personal assessment processes of the contribution of the employee (developer or architect) to open source related topics such as contributions to open source communities and compliance with Intellectual Property licensing terms. Most topics are shared and fit into technical career paths, whereas some might or should be specific.\n- Best kept secret and company posture: need to address the communication aspects (how core this is to your organisation that it might be reflected in your annual report), how does it impact your communication posture (an open source contributor could be a spokesperson for your company including press contacts).\n\n### Resources\n\n- Regarding the ability of people to speak outside the company during events, please see Activity 31: \"(Engagement Goal) Publicly asserting the use of open source\".\n"
    },
    {
      "id": "GGI-A-39",
      "name": "Upstream first",
      "path": "53_activity_39.md",
      "roles": [
        "Team Leader",
        "Developer"
      ],
      "goal": "Culture Goal",
      "content": "## Upstream first\n\nActivity ID: [GGI-A-39](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/53_activity_39.md).\n\n### Description\n\nThis activity is concerned with developing awareness with regard to the benefits of contributing back and enforcing the upstream first principle.\n\nWith the upstream first approach all development on an open source project is to be made with the level of quality and openness required to be submitted to a project's core developers and published by them.\n\n### Opportunity Assessment\n\nWriting code with upstream first in mind results in:\n\n- better quality code,\n- code that is ready to be submitted upstream,\n- code that is merged in the core software,\n- code that will be compatible with future version,\n- recognition by the project community and better and more profitable cooperation.\n\n> Upstream First is more than just \"being kind\". It means you have a say in the project. It means predictability. It means you are in control. It means you act rather than react. It means you understand open source. ([Maximilian Michels](https://maximilianmichels.com/2021/upstream-first/))\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity: Upstream first is implemented?\n\n- [ ] Significant increase in the number of pull/merge requests submitted to third party projects.\n- [ ] A list of third party projects for which upstream first must be applied has been drafted.\n\n### Recommendations\n\n- Identify developers with most experience at interacting with upstream developers.\n- Facilitate interaction between developers and core developers (events, hackathons, etc.)\n\n### Resources\n\n- A clear explanation of the Upstream First principle and why it fits in the Culture Goal: <https://maximilianmichels.com/2021/upstream-first/>.\n\n> Upstream First means that whenever you solve a problem in your copy of the upstream code which others could benefit from, you contribute these changes back upstream, i.e. you send a patch or open a pull request to the upstream repository.\n\n- [What is Upstream and Downstream in Software Development?](https://reflectoring.io/upstream-downstream/) A crystal clear explanation.\n- Explained from the Chromium OS design documents: [Upstream First](https://www.chromium.org/chromium-os/chromiumos-design-docs/upstream-first).\n- Red Hat on upstream and the advantages of [upstream first](https://www.redhat.com/en/blog/what-open-source-upstream).\n\n### Proposed next activities\n\n- [GGI-A-25 - Promote open source development best practices](https://ospo-alliance.org/ggi/activities/promote_open_source_development_best_practices) Contributing back upstream is a major open source best practice. Make it a part of the oranisation's best practices too, it will help with external contribtions, internal overall quality and knowledge sharing.\n"
    },
    {
      "id": "GGI-A-29",
      "name": "Engage with open source projects",
      "path": "54_activity_29.md",
      "roles": [
        "Decision Maker",
        "Developer"
      ],
      "goal": "Engagement Goal",
      "content": "## Engage with open source projects\n\nActivity ID: [GGI-A-29](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/54_activity_29.md).\n\n### Description\n\nThis activity is about committing significant contributions to some OSS projects that are important to you. Contributions are scaled up and committed at the organisation level (not personal level as in #26). They can take several forms, from direct funding to resources allocation (e.g. people, servers, infrastructure, communication, etc.), as long as they benefit the project or ecosystem sustainably and efficiently.\n\nThis activity is a follow-up on activity #26 and brings open source projects' contributions to the level of the organisation, making them more visible, powerful, and beneficial. In this activity, the contributions are supposed to bring a substantial, long-term improvement to the OSS project: e.g., a developer or team who develops a much-wanted new feature, infrastructure assets, servers for a new service, take-over of the maintenance of a widely used branch.\n\nThe idea is to set aside a percentage of resources to sponsor open source developers that write and maintain libraries or projects that we use.\n\nThis activity implies to have a mapping of open source software used, and an evaluation of their criticality to decide which one to support.\n\n### Opportunity Assessment\n\n> If every company using open source contributed at least a little, we would have a healthy ecosystem. <https://news.ycombinator.com/item?id=25432248>\n\nSupporting projects helps ensure their sustainability and provides access to information, even maybe help influence and prioritise some developments (although this should not be the main reason for supporting projects).\n\nPotential benefits of this activity: ensuring bug reports are prioritised and developments are integrated into the stable version.\nPossible costs associated with the activity: committing time to projects, cash commitment.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] Beneficiary project identified.\n- [ ] Support option decided, such as direct monetary contribution or code contribution.\n- [ ] Task leader appointed.\n- [ ] Some contribution has happened.\n- [ ] Result of contribution has been evaluated.\n\nVerification points borrowed from OpenChain [self certification](https://certification.openchainproject.org/) questionnaire:\n\n- [ ] We have a policy for contribution to open source projects on behalf of the organisation.\n- [ ] We have a documented procedure governing open source contributions.\n- [ ] We have a documented procedure for making all Software Staff aware of the open source contribution policy.\n\n### Tools\n\nSome organisations offer mechanisms for funding open source projects (it could be convenient if your target project is in their portfolios).\n\n- [Open Collective](https://opencollective.com/).\n- [Software Freedom Conservancy](https://sfconservancy.org/).\n- [Tidelift](https://tidelift.com/).\n\n### Recommendations\n\n- Concentrate on projects that are critical for the organisation: these are the projects you most want to help with your contributions.\n- Target community projects.\n- This activity requires a minimum familiarity with a target project.\n\n### Resources\n\n- [How to support open source projects now](https://sourceforge.net/blog/support-open-source-projects-now/):  A short page with ideas on funding open source projects.\n- [Sustain OSS: a space for conversations about sustaining open source](https://sustainoss.org)\n\n### Proposed next activities\n\n- [GGI-A-26 - Contribute to open source projects](https://ospo-alliance.org/ggi/activities/contribute_to_open_source_vendors) The most natural way to engage with an open source initiative is by contributing directly to the project. You will in return collect valuable feedback on your contributions.\n- [GGI-A-30 - Support open source communities](https://ospo-alliance.org/ggi/activities/support_open_source_communities) There are many ways to support the open source initiatives that are essential to your organisation. Getting engaged with the communities is a good way to discover and foster them. \n"
    },
    {
      "id": "GGI-A-30",
      "name": "Support open source communities",
      "path": "54_activity_30.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Engagement Goal",
      "content": "## Support open source communities\n\nActivity ID: [GGI-A-30](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/54_activity_30.md).\n\n### Description\n\nThis activity is about engaging with institutional representatives of the open source world.\n\nIt is achieved through:\n\n- Joining OSS foundations (including the financial cost of membership).\n- Supporting, advocating foundations activities.\n\nThis activity involves allocating the development and IT teams some time and budget to participate in open source communities.\n\n### Opportunity Assessment\n\nOpen source communities are at the forefront of the evolution of the open source ecosystem. Engaging with open source communities has several advantages:\n\n- it helps keep informed and up to date,\n- it enhances the profile of the organisation,\n- membership comes with benefits,\n- it provides additional structure and motivation to the open source IT team.\n\nCosts include:\n\n- membership fees,\n- personnel time and some travel budget allocated to participate in community activities,\n- monitoring of IP commitment.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] The organisation is a signed member of an open source foundation.\n- [ ] The organisation participates in the governance.\n- [ ] Software developed by the organisation is submitted to / has been added to the code base of a foundation.\n- [ ] Membership is acknowledged on the websites of both the organisation and the community.\n- [ ] Performed cost/benefit assessment of the membership.\n- [ ] A contact point for the community has been appointed.\n\n### Recommendations\n\n- Join a community compatible with your size and resources, i.e. a community that can hear your voice and where you can be a recognized contributor.\n\n### Resources\n\n- Check out this [useful page](https://www.linuxfoundation.org/tools/participating-in-open-source-communities/) from the Linux Foundation on the why and how to join an open source community.\n\n### Proposed next activities\n\n- [GGI-A-31 - Publicly assert use of open source](https://ospo-alliance.org/ggi/activities/publicly_assert_use_of_open_source) Now that you officially support some OSS communities, make it known! It is good for your reputation, and it is good for the projects in terms of health and dissemination.\n\n"
    },
    {
      "id": "GGI-A-31",
      "name": "Publicly assert use of open source",
      "path": "54_activity_31.md",
      "roles": [
        "Decision Maker",
        "Team Leader"
      ],
      "goal": "Engagement Goal",
      "content": "## Publicly assert use of open source\n\nActivity ID: [GGI-A-31](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/54_activity_31.md).\n\n### Description\n\nThis Activity is about acknowledging the use of OSS in an information system, in applications and in new products.\n\n- Providing success stories.\n- Presenting at events.\n- Funding participation to events.\n\n### Opportunity Assessment\n\nIt is now generally accepted that most information systems run on OSS, and that new applications are for the most part made by reusing OSS.\n\nThe main benefit of this activity is to create a level playing field between OSS and proprietary software, to make sure OSS is paid equal attention to and managed just as professionally as proprietary software.\n\nA side benefit is that it greatly helps raise the profile of the OSS ecosystem and, since OSS users are identified as \"innovators\" it also enhances the attractiveness of the organisation.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] Commercial open source vendors are granted authorization to use the organisation's name as customer reference.\n- [ ] Contributors are allowed to do so and express themselves under the organisation's name.\n- [ ] Use of OSS is openly mentioned in the IT department annual report.\n- [ ] There is no obstacle to the organisation explaining their use of OSS in the media (interviews, OSS and industry events, etc.).\n\n### Recommendations\n\n- The objective of this activity is not for the organisation to become an OSS activism body, but to make sure there is no obstacle to the public recognising its use of OSS.\n\n### Resources\n\n- Example of [CERN](https://superuser.openstack.org/articles/cern-openstack-update/) publicly asserting their use of OpenStack\n"
    },
    {
      "id": "GGI-A-33",
      "name": "Engage with open source vendors",
      "path": "54_activity_33.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Engagement Goal",
      "content": "## Engage with open source vendors\n\nActivity ID: [GGI-A-33](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/54_activity_33.md).\n\n### Description\n\nSecure contracts with open source vendors that provide software critical to you. Companies and entities that produce open source software need to thrive to provide maintenance and development of new features. Their specific expertise is required on the project, and the community of users relies on their continued business and contributions.\n\nEngaging with open source vendors takes several forms:\n\n- Subscribing support plans.\n- Contracting local service companies.\n- Sponsoring developments.\n- Paying for a commercial licence.\n\nThis activity implies considering open source projects as fully-featured products worth paying for, much like any proprietary products -- although usually far less expensive.\n\n### Opportunity Assessment\n\nThe objective of this activity is to ensure professional support of open source software used in the organisation. It has several benefits:\n\n- Continuity of service through timely bug fixes.\n- Service performance through optimised installation.\n- Clarification of the legal/commercial status of the software used.\n- Access to early information.\n- Stable budget forecast.\n\nThe cost is obviously that of the support plans selected. Another cost might be to depart from bulk outsourcing to large systems integrators in favour of fine-grained contracting with expert SMEs.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] Open source used in the organisation is backed by commercial support.\n- [ ] Support plans for some open source projects have been contracted.\n- [ ] Cost of open source support plans is a legitimate entry in the IT budget.\n\n### Recommendations\n\n- Whenever possible, find local expert SMEs.\n- Beware of large systems integrators reselling third-party expertise (reselling support plans that expert open source SMEs actually provide).\n\n### Resources\n\nA couple of links illustrating the commercial reality of open source software:\n\n- [A quick read to understand commercial open source](https://www.webiny.com/blog/what-is-commercial-open-source).\n"
    },
    {
      "id": "GGI-A-43",
      "name": "Open source procurement policy",
      "path": "54_activity_43.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Engagement Goal",
      "content": "## Open source procurement policy\n\nActivity ID: [GGI-A-43](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/54_activity_43.md).\n\n### Description\n\nThis activity is about implementing a process to select, acquire, purchase open source software and services. It is also about considering the actual cost of open source software and provisioning for it. OSS may be \"free\" at first sight, but it is not without internal and external costs such as integration, training, maintenance and support.\n\nSuch policy requires that both open source and proprietary solutions are symmetrically considered when evaluating value for money as the optimum combination of the total cost of ownership and quality. Therefore, the IT Procurement department should actively and fairly consider open source options, while at the same time ensuring proprietary solutions are considered on an equal footing in purchasing decisions.\n\nOpen source preference can be explicitly stated based on the intrinsic flexibility of the open source option when there is no significant overall cost difference between proprietary and open source solutions.\n\nProcurement departments must understand that companies offering support for OSS typically lack the commercial resources to participate in procurement competitions, and adapt their open source procurement policies and processes accordingly.\n\n### Opportunity Assessment\n\nSeveral reasons justify the efforts to set up specific open source procurement policies:\n\n- Supply of commercial open source software and services is growing and cannot be ignored, and requires the implementation of dedicated procurement policies and processes.\n- There is a growing supply of highly competitive commercial open source business solutions for corporate information systems.\n- Even after adopting a free-of-charge OSS component and integrating it into an application, internal or external resources must be provided to maintain that source code.\n- Total Cost of Ownership (TCO) is often (although not necessarily) lower for FOSS solutions: no licence fees to pay when purchasing/upgrading, open market for service providers, option to provide some or all of the solution yourself.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] New call for proposals proactively request open source submissions.\n- [ ] Procurement department has a way to evaluate open source vs proprietary solutions.\n- [ ] A simplified procurement process for open source software and services has been implemented and documented.\n- [ ] An approval process drawing from cross-functional expertise has been defined and documented.\n\n### Recommendations\n\n- \"Be sure to tap into the expertise of your IT, DevOps, cybersecurity, risk management, and procurement teams when creating the process.\" (from [5 Open Source Procurement Best Practices](https://anchore.com/blog/5-open-source-procurement-best-practices/)).\n- Competition law may require that \"open source\" not be specifically mentioned.\n- Select technology upfront then go to RFP for customisation and support services.\n\n### Resources\n\n- [Decision factors for open source software procurement](http://oss-watch.ac.uk/resources/procurement-infopack): not new, but still a great read by our colleagues at OSS-watch in the UK. Check out the [slides](http://oss-watch.ac.uk/files/procurement.odp).\n- [5 Open Source Procurement Best Practices](https://anchore.com/blog/5-open-source-procurement-best-practices/): a recent piece on open source procurement with useful hints.\n\n### Proposed next activities\n\n- [GGI-A-33 - Engage with open source vendors](https://ospo-alliance.org/ggi/activities/engage_with_open_source_vendors) Defining a procument policy helps you identify the OSS providers and communities that you need to care about, and to engage with.\n"
    },
    {
      "id": "GGI-A-16",
      "name": "Setup a strategy for corporate open source governance",
      "path": "55_activity_16.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Strategy Goal",
      "content": "## Setup a strategy for corporate open source governance\n\nActivity ID: [GGI-A-16](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/55_activity_16.md).\n\n### Description\n\nDefining a high-level strategy for open source governance within the company ensures the consistency and visibility of approaches towards both in-house usage and external contributions and involvement. It makes the company's communication more effective by offering a clear and established vision and leadership.\n\nThe shift towards open source brings with it numerous benefits, as well as some duties and a change in the company's culture. It can impact business models and influence the manner in which an organisation presents its value and offer, and in its position towards its customers and competitors.\n\nThis activity includes the following tasks:\n\n- Set up an OSS Officer, with (top) management sponsoring and backing.\n- Set up and publish a clear roadmap for open source, with stated objectives and expected benefits.\n- Make sure that all top-level management knows about it and acts in accordance with it.\n- Promote OSS inside the company: encourage people to use it, foster in-house initiatives and level of knowledge.\n- Promote OSS outside the company: through official statements and communication, and visible involvement in OSS initiatives.\n\nDefining, publishing and enforcing a clear and consistent strategy also helps buy-in from all people within the company and eases further initiatives from teams.\n\n### Opportunity Assessment\n\nIt's a good time to work on this activity if:\n\n- There is no coordinated effort from management, and open source is still seen as an ad-hoc solution.\n- There are already in-house initiatives, but they don't penetrate up to the upper levels of management.\n- The initiative was started some time ago but faces many obstacles, and still doesn't yield the expected results.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] There is a clear open source governance charter for the company.\n  The charter should contain:\n   - what to achieve,\n   - who we do this for,\n   - what the power of the strategist(s) is and what not.\n- [ ] An open source roadmap is widely available and accepted throughout the company.\n\n### Recommendations\n\n- Set up a group of people and processes to define and monitor open source governance within the company.\n Ensure there is a clear commitment from the top-level management to the open source initiatives.\n- Communicate about the open source strategy within the organisation, make it a major concern and a true corporate commitment.\n- Ensure that the roadmap and strategy is well understood by everybody, from development teams to management and infrastructure staff.\n- Communicate on its progress, so people know where the organisation is regarding its commitment. Publish regular updates and indicators.\n\n### Resources\n\n- [Checklist and references for Open Governance](https://opengovernance.dev/).\n- [L'open source comme enjeu de souverainet\u00e9 num\u00e9rique, by C\u00e9dric Thomas, OW2 CEO, Workshop at Orange Labs, Paris, January 28, 2020](https://www.ow2.org/download/OSS_Governance/Level_5/2001-OSSetSouveraineteNumerique-RC3.pdf) (french only).\n- [A series of guides to manage open source within the enterprise, by the Linux Foundation](https://todogroup.org/guides/).\n- [A fine example of open source strategy document, by the LF Energy group](https://www.lfenergy.org/wp-content/uploads/sites/67/2019/07/Open-Source-Strategy-V1.0.pdf)\n\n### Proposed next activities\n\n- [GGI-A-35 - Open source and digital sovereignty](https://ospo-alliance.org/ggi/activities/open_source_and_digital_sovereignty) A proper strategy for corporate open source governance should improve open source and digital sovereignty. Now is a good time to define these in the context of the organisation.\n- [GGI-A-34 - C-Level awareness](https://ospo-alliance.org/ggi/activities/c-level_awareness) C-level executives engagement will be needed to properly implement the open source corporate strategy. Educating and involving them is a good next step to achieve success here.\n\n"
    },
    {
      "id": "GGI-A-34",
      "name": "C-Level awareness",
      "path": "55_activity_34.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Strategy Goal",
      "content": "## C-Level awareness\n\nActivity ID: [GGI-A-34](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/55_activity_34.md).\n\n### Description\n\nThe open source initiative of the organisation will yield its strategic benefits only if it is enforced at its highest levels by integrating the open source DNA into the company's strategy and internal working. Such commitment cannot happen if higher-level executives and top management are not themselves a part of it. The training and open source mindset must also be extended to those who shape the policies, decisions and overall strategy, both inside and outside the company.\n\nThis commitment ensures that practical improvements, mindset changes and new initiatives are met with consistent, benevolent and sustainable support from the hierarchy, bringing in more fervent participation from workers. It shapes how external actors see the organisation, bringing in reputational and ecosystem benefits. It is also a means to establish the initiative and its benefits in the mid and long term.\n\n### Opportunity Assessment\n\nThis activity becomes essential if/when:\n\n- The organisation has set global goals relevant to open source management, but struggles to achieve them. It is unlikely that the initiative can achieve anything without good knowledge and a clear commitment from higher-level executives.\n- The initiative has already started and is making progress, but the higher levels of the hierarchy do not follow it up properly.\n\nHopefully, it should become evident that anything but ad hoc usage of open source requires a consistent and well-thought approach, given the range of teams and cultural change it can bring.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] There is a mandated governance office/officer empowered to set a uniform open source strategy across the company and ensure that the scope is clear.\n- [ ] There is a clear, binding commitment from the hierarchy to the OSS strategy.\n- [ ] There is transparent communication by the hierarchy about its commitment to the program.\n- [ ] The hierarchy is available to discuss open source software. It can be solicited and challenged on its promises.\n- [ ] There is an appropriate budget and funding for the initiative.\n\n### Recommendations\n\nExamples of actions associated with this activity include:\n\n- Conduct training to demystify OSS to C-level management.\n- Obtain explicit, practical endorsement for OSS usage and strategy.\n- Explicitly mention and endorse the OSS program in internal communications.\n- Explicitly mention and endorse the OSS program in public communications.\n\nOpen source is a _strategic enabler_ that embarks _enterprise culture_. What does this mean?\n\n- Open source can be leveraged as a mechanism to disrupt suppliers and reduce software acquisition costs.\n   - Should open source come under the purview of _Software Asset Managers_ or _purchasing departments_?\n- Open source licences enshrine the freedoms that deliver the benefits of open source, but they also carry _obligations_. If not met appropriately, responsibilities can create legal, commercial and image risks to an organisation.\n   - Will licence conditions grant visibility into resources that should remain confidential?\n   - Will it impact my organisation's patent portfolio?\n   - How should project teams be trained and supported on this subject?\n- Contributing back to external open source projects is where the biggest value of open source lies.\n   - How should my company encourage (and track) this?\n   - How should developers use GitHub, GitLab, Slack, Discord, Telegram, or any of the other tools open source projects habitually use?\n   - Can open source impact the company's HR policies?\n- Of course, it's not all about contributing back, what about my own open source projects?\n   - Am I ready to do _open_ innovation?\n   - How will my projects manage _incoming_ contributions?\n   - Should I spend the effort to nurture a community for a given project?\n   - How should I lead the community, what role should community members have?\n   - Am I ready to cede roadmap decisions to a community?\n   - Can open source be a valuable tool to reduce silo-isation between company teams?\n   - Do I need to handle open source transfer from one company entity to another?\n\n### Proposed next activities\n\n- [GGI-A-31 - Publicly assert use of open source](https://ospo-alliance.org/ggi/activities/publicly_assert_use_of_open_source) C-level executives are prominent representatives of an organisation. Make them communicate about the organisation's involvement in open source.\n\n"
    },
    {
      "id": "GGI-A-35",
      "name": "Open source and digital sovereignty",
      "path": "55_activity_35.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Strategy Goal",
      "content": "## Open source and digital sovereignty\n\nActivity ID: [GGI-A-35](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/55_activity_35.md).\n\n### Description\n\nDigital sovereignty can be defined as the\n\n> \u201cAbility and opportunity of individuals and institutions to execute their role(s) in the digital world independently, intentionally and safely.\u201d\n> &mdash; Competence Centre for Public IT, Germany\n\nIn order to properly conduct its business, any entity has to rely on some other partners, services, products and tools. Reviewing the ties and constraints of these dependencies enable the organisation to assess and control its dependence towards external factors, thus improving its autonomy and resilience.\n\nAs an example, vendor lock-in is a strong factor of dependence that may impede the organisation's processes and added value and as such, it should be avoided. Open source is one of the ways out of this lock. Open source plays a significant role in digital sovereignty, allowing a greater choice between solutions, providers and integrators, and greater control over IT roadmaps.\n\nIt should be noted that digital sovereignty is not a trust issue: we obviously need to trust our partners and providers, but the relationship gets even better when it's based on mutual consent and recognition, rather than forced contracts and strains.\n\nHere are some advantages of a better digital sovereignty:\n\n- Improve the ability of the organisation to make its own choices without constraints.\n- Improve the resilience of the company regarding external actors and factors.\n- Improve negotiating position when dealing with partners and service providers.\n\n### Opportunity Assessment\n\n- How difficult/expensive is it to move away from a solution?\n- Could the solution providers impose unwanted conditions on their service (e.g. licence change, contracts updates)?\n- Could the solution providers unilaterally increase their prices, simply because we do not have a choice?\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this Activity:\n\n- [ ] There is an assessment of critical dependencies for the organisation's providers and partners.\n- [ ] There is a backup plan for these identified dependencies.\n- [ ] There is a stated requirement for digital sovereignty when new solutions are investigated.\n\n### Recommendations\n\n- Identify key dependency risks from service providers and 3rd party entities.\n- Maintain a list of open-source alternatives to critical services.\n- Add a requirement when selecting new tools and services used within the entity, stating the need for digital sovereignty.\n\n### Resources\n\n- [A Primer on Digital Sovereignty & Open Source: part I](https://www.opensourcerers.org/2021/08/09/a-promer-on-digital-sovereignty/) and [A Primer on Digital Sovereignty & Open Source: part II](https://www.opensourcerers.org/2021/08/16/a-primer-on-digital-sovereignty-open-source/), from the Open-Sourcerers website.\n- An excellent superuser.openstack.org article on [The Role of Open Source in Digital Sovereignty](https://superuser.openstack.org/articles/the-role-of-open-source-in-digital-sovereignty-openinfra-live-recap/). Here is a short extract:\n\n  > Digital Sovereignty is a key concern for the 21st century, especially for Europe. Open source has a major role to play in enabling digital sovereignty, by allowing everyone to access the necessary technology, but also by providing the governance transparency and interoperability necessary for those solutions to succeed.\n\n- The European Union's take on digital sovereignty, from the [Open Source Observatory (OSOR)](https://joinup.ec.europa.eu/collection/open-source-observatory-osor): Open Source, digital sovereignty and interoperability: The Berlin Declaration.\n- The UNICEF's position on [Open Source for Digital Sovereignty](https://www.unicef.org/innovation/stories/open-source-digital-sovereignty).\n"
    },
    {
      "id": "GGI-A-36",
      "name": "Open source enabling innovation",
      "path": "55_activity_36.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Strategy Goal",
      "content": "## Open source enabling innovation\n\nActivity ID: [GGI-A-36](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/55_activity_36.md).\n\n### Description\n\n> \"Innovation is the practical implementation of ideas that result in the introduction of new goods or services or improvement in offering goods or services.\"\n>\n> &mdash; <cite>Schumpeter, Joseph A.</cite>\n\nOpen source can be a key factor for innovation through diversity, collaboration and a fluent exchange of ideas. People from different backgrounds and domains may have different perspectives and provide new, improved or even disruptive answers to known problems. One can enable innovation by listening to different views and actively promoting open collaboration on projects and topics.\n\nSimilarly, participating in the elaboration and implementation of open standards is a great promoter of good practices and ideas to improve the company's daily work. It also allows the entity to drive and influence innovation to where and what it needs, and enhances its global visibility and reputation.\n\nThrough innovation, open source makes it possible not only to transform the goods or services that your company markets, but also to create or modify the whole ecosystem in which your company wants to thrive.\n\nAs an example, by releasing Android as open source, Google is inviting hundreds of thousands of companies to build up their own services based upon this open source technology. Google is thus creating a whole ecosystem from which all participants could benefit. Of course, very few companies are powerful enough to create an ecosystem by their own decision. But there are many examples of alliances between companies to create such an ecosystem.\n\n### Opportunity Assessment\n\nIt is important to assess the position of your company compared with its competitors and its partners and customers because it would often be risky for a company to drift too far away from the standards and technologies used by its customers, partners and competitors. Innovation obviously means being different, but what differs should not represent too large a scope; otherwise, your company would not benefit from the software developments made by the other companies of the ecosystem and from the business momentum the ecosystem provides.\n\n### Progress Assessment\n\nThe following **verification points** demonstrate progress in this activity:\n\n- [ ] The technologies -- and open source communities that develop them -- that have an impact on the business have been identified.\n- [ ] The progress and publications of these open source communities are monitored -- I am even aware of their strategy before the releases are made public.\n- [ ] Employees of the organisation are members of (some of) these open source communities and influence their roadmaps and technical choices by contributing lines of codes and participating in the governance bodies of these communities.\n\n### Recommendations\n\nOut of all the technologies that are necessary to run your business, you should identify:\n\n- the technologies that could be the same as your competitors,\n- the technologies that should be specific to your company.\n\nStay up-to-date on emerging technologies. Open source has been driving innovation for the last decade, and many day-to-day powerful tools come from there (think of Docker, Kubernetes, Apache Big Data projects, or Linux). No need to know everything about everything, but one should know enough of the state of the art to identify interesting new trends.\n\nAllow, and encourage, people to submit innovative ideas, and to bring them forward. If possible, spend resources on these initiatives and make them grow. Rely on people's passion and will to create and foster emerging ideas and trends.\n\n### Resources\n\n- [4 innovations we owe to open source](https://www.techrepublic.com/article/4-innovations-we-owe-to-open-source/).\n- [The Innovations of Open Source](https://dirkriehle.com/publications/2019-selected/the-innovations-of-open-source/), from Professor Dirk Riehle.\n- [Open source technology, enabling innovation](https://www.raconteur.net/technology/cloud/open-source-technology/).\n- [Can Open Source Innovation Work in the Enterprise?](https://www.threefivetwo.com/blog/can-open-source-innovation-work-in-the-enterprise).\n- [Europe: Open source software strategy](https://ec.europa.eu/info/departments/informatics/open-source-software-strategy_en#opensourcesoftwarestrategy).\n- [Europe: Open source software strategy 2020-2023](https://ec.europa.eu/info/sites/default/files/en_ec_open_source_strategy_2020-2023.pdf).\n"
    },
    {
      "id": "GGI-A-37",
      "name": "Open source enabling digital transformation",
      "path": "55_activity_37.md",
      "roles": [
        "Decision Maker"
      ],
      "goal": "Strategy Goal",
      "content": "## Open source enabling digital transformation\n\nActivity ID: [GGI-A-37](https://gitlab.ow2.org/ggi/ggi/-/blob/main/handbook/content/55_activity_37.md).\n\n### Description\n\n> \"Digital Transformation is the adoption of digital technology to transform services or businesses, through replacing non-digital or manual processes with digital processes or replacing older digital technology with newer digital technology.\" (Wikipedia)\n\nWhen the most advanced organisations in Digital Transformation jointly drive change through their Business, IT and Finance to anchor digital in the way, they reconsider:\n\n- Business model: value chain with ecosystems, as a service, SaaS.\n- Finance: opex/capex, people, outsourcing.\n- IT: innovation, legacy/asset modernization.\n\nOpen source is at the heart of digital transformation:\n\n- Technologies, Agile practices, product management.\n- People: collaboration, open communication, development/decision cycle.\n- Business models: try & buy, open innovation.\n\nIn terms of competitiveness, the most visible processes are probably the processes that directly impact the customer experience.  And we have to recognize that the big players, as well as start-up companies, by delivering totally unprecedented customer experience, drastically changed customer expectations.\n\nCustomer experience as well as all the other processes within a company entirely depend on IT.  Every company has to transform its IT, this is what the digital transformation is about.  Companies that have not done it yet, have now to achieve their digital transformation as fast as possible, otherwise the risk is that they could be wiped out of the market.  Digital Transformation is a condition for survival.  Since the stakes are so high, a company cannot entirely leave the digital transformation to a supplier.  Every company has to get hands on with its IT, which means that every company has to get hands on with open source software because there is no IT without open source software.\n\nExpected benefits of the digital transformation include:\n\n- Simplify, automate core processes, make them real-time.\n- Enable fast responses to competitive changes.\n- Take advantage of Artificial intelligence and big data.\n\n### Opportunity Assessment\n\nDigital transformation could be managed by:\n\n- Segments of the IT: Production IT, Business Support IT (CRM, billing, procurement\u2026), Support IT (HR, Finance, accounting...), Big Data.\n- Type of technology or process supporting the IT: Infrastructure (cloud), Artificial Intelligence, Processes (Make-or-Buy, DevSecOps, SaaS).\n\nInjecting open source in a particular segment or technology of your IT reveals that you want to get hands on in this segment or technology, because you assessed that this particular segment or technology of your IT is important for the competitiveness of your company.\nIt is important to assess the position of your company compared not only with your competitors, but also with other industries, and key players in terms of customer experience and market solutions.\n\n### Progress Assessment\n\n- [ ] Level 1: Situation assessment\n\n   I have identified:\n   - the segments of IT that are important for the competitiveness of my company, and\n   - the open source technologies required to develop applications in these segments.\n\n   And I have thus decided:\n   - on which segments I want to manage in-house the development of projects, and\n   - on which open source technologies I need to build in-house expertise.\n\n- [ ] Level 2: Engagement\n\n   On some selected open source technologies used within the company, several developers have been trained and are recognized as valuable contributors by the open source community.  \n   In some selected segments, projects based upon open source technologies have been launched.\n\n- [ ] Level 3: Generalisation\n\n   For all projects, an open source alternative is systematically being investigated during the inception stage of the project. To make it easier for the project team to study such open source alternative, a central budget, and a central team of architects, hosted in the IT Department, is dedicated to providing assistance to the projects.\n\n**KPIs**:\n\n- KPI 1. Ratio for which an open source alternative was investigated: (Number of projects / Total number of projects).\n- KPI 2. Ratio for which the open source alternative was chosen: (Number of projects / Total number of projects).\n\n### Recommendations\n\nBeyond the headline, Digital Transformation is a mindset that involves some fundamental changes, and this should also (or even mainly) come from the top-level layers of the organisation. Management shall promote initiatives, new ideas, manage risks, and potentially update existing procedures to make them fit new concepts.\n\nPassion is a huge factor of success. One of the means developed by key players in the field is to set up open spaces for new ideas, where people can submit, and freely work on, their ideas about digital transformation. Management should encourage such initiatives.\n\n### Resources\n\n- [Eclipse Foundation: Enabling Digital Transformation in Europe Through Global Open Source Collaboration](https://outreach.eclipse.foundation/hubfs/EuropeanOpenSourceWhitePaper-June2021.pdf).\n- [Europe: Open source software strategy](https://ec.europa.eu/info/departments/informatics/open-source-software-strategy_en#opensourcesoftwarestrategy).\n- [Europe: Open source software strategy 2020-2023](https://ec.europa.eu/info/sites/default/files/en_ec_open_source_strategy_2020-2023.pdf).\n"
    }
  ],
  "source": {
    "git-remote": "https://gitlab.ow2.org",
    "git-project": "ggi/ggi",
    "git-reference": "v1.2",
    "download-timestamp": "2023-10-18 09:26:37"
  }
}
